services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DBNAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DBNAME}"]
      interval: 10s
      retries: 5
    ports:
      - "5432:${PG_PORT}"
    networks:
      - pvz-net

  goose:
    build:
      context: .
      dockerfile: build/goose/Dockerfile
    container_name: goose
    restart: no
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - GOOSE_DRIVER=${GOOSE_DRIVER}
      - GOOSE_DBSTRING=host=postgres port=${PG_PORT} user=${PG_USER} password=${PG_PASSWORD} dbname=${PG_DBNAME} sslmode=${PG_SSLMODE}
      - GOOSE_VERBOSE=true
    command: ["up"]
    volumes:
      - ./migrations:/migrations
    networks:
      - pvz-net

  pvz:
    build:
      context: .
      dockerfile: build/pvz_app/Dockerfile
    container_name: pvz
    ports:
      - "${HTTP_SERVER_PORT}:${HTTP_SERVER_PORT}"
      - "3000:${GRPC_SERVER_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pvz-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9000:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - pvz-net

volumes:
  db_data:

networks:
  pvz-net:
    driver: bridge
    name: pvz-net
