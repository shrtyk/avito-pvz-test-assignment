// Package dto provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package dto

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for PVZCity.
const (
	Kazan           PVZCity = "Казань"
	Moscow          PVZCity = "Москва"
	SaintPetersburg PVZCity = "Санкт-Петербург"
)

// Defines values for ProductType.
const (
	ProductTypeClothing    ProductType = "одежда"
	ProductTypeElectronics ProductType = "электроника"
	ProductTypeFootwear    ProductType = "обувь"
)

// Defines values for ReceptionStatus.
const (
	Close      ReceptionStatus = "close"
	InProgress ReceptionStatus = "in_progress"
)

// Defines values for UserRole.
const (
	UserRoleEmployee  UserRole = "employee"
	UserRoleModerator UserRole = "moderator"
)

// Defines values for PostDummyLoginJSONBodyRole.
const (
	PostDummyLoginJSONBodyRoleEmployee  PostDummyLoginJSONBodyRole = "employee"
	PostDummyLoginJSONBodyRoleModerator PostDummyLoginJSONBodyRole = "moderator"
)

// Defines values for PostProductsJSONBodyType.
const (
	PostProductsJSONBodyTypeClothing    PostProductsJSONBodyType = "одежда"
	PostProductsJSONBodyTypeElectronics PostProductsJSONBodyType = "электроника"
	PostProductsJSONBodyTypeFootwear    PostProductsJSONBodyType = "обувь"
)

// Defines values for PostRegisterJSONBodyRole.
const (
	Employee  PostRegisterJSONBodyRole = "employee"
	Moderator PostRegisterJSONBodyRole = "moderator"
)

// Error defines model for Error.
type Error struct {
	Message string `json:"message"`
}

// PVZ defines model for PVZ.
type PVZ struct {
	City             PVZCity             `json:"city" validate:"required,oneof=Москва Санкт-Петербург Казань"`
	Id               *openapi_types.UUID `json:"id,omitempty" validate:"omitempty,uuid"`
	RegistrationDate *time.Time          `json:"registrationDate,omitempty" validate:"omitempty,datetime"`
}

// PVZCity defines model for PVZ.City.
type PVZCity string

// Product defines model for Product.
type Product struct {
	DateTime    *time.Time          `json:"dateTime,omitempty" validate:"omitempty,datetime"`
	Id          *openapi_types.UUID `json:"id,omitempty" validate:"omitempty,uuid"`
	ReceptionId openapi_types.UUID  `json:"receptionId" validate:"required,uuid"`
	Type        ProductType         `json:"type" validate:"required,oneof=электроника одежда обувь"`
}

// ProductType defines model for Product.Type.
type ProductType string

// Reception defines model for Reception.
type Reception struct {
	DateTime time.Time           `json:"dateTime" validate:"required,datetime"`
	Id       *openapi_types.UUID `json:"id,omitempty" validate:"omitempty,uuid"`
	PvzId    openapi_types.UUID  `json:"pvzId" validate:"required,uuid"`
	Status   ReceptionStatus     `json:"status" validate:"required,oneof=in_progress close"`
}

// ReceptionStatus defines model for Reception.Status.
type ReceptionStatus string

// Token defines model for Token.
type Token struct {
	Jwt string `json:"jwt"`
}

// User defines model for User.
type User struct {
	Email openapi_types.Email `json:"email" validate:"required,email"`
	Id    *openapi_types.UUID `json:"id,omitempty" validate:"omitempty,uuid"`
	Role  UserRole            `json:"role" validate:"required,oneof=employee moderator"`
}

// UserRole defines model for User.Role.
type UserRole string

// PostDummyLoginJSONBody defines parameters for PostDummyLogin.
type PostDummyLoginJSONBody struct {
	Role PostDummyLoginJSONBodyRole `json:"role" validate:"required,oneof=employee moderator"`
}

// PostDummyLoginJSONBodyRole defines parameters for PostDummyLogin.
type PostDummyLoginJSONBodyRole string

// PostLoginJSONBody defines parameters for PostLogin.
type PostLoginJSONBody struct {
	Email    openapi_types.Email `json:"email" validate:"required,email"`
	Password string              `json:"password" validate:"required,gte=6"`
}

// PostProductsJSONBody defines parameters for PostProducts.
type PostProductsJSONBody struct {
	PvzId openapi_types.UUID       `json:"pvzId" validate:"required,uuid"`
	Type  PostProductsJSONBodyType `json:"type" validate:"required,oneof=электроника одежда обувь"`
}

// PostProductsJSONBodyType defines parameters for PostProducts.
type PostProductsJSONBodyType string

// GetPvzParams defines parameters for GetPvz.
type GetPvzParams struct {
	// StartDate Начальная дата диапазона
	StartDate *time.Time `form:"startDate,omitempty" json:"startDate,omitempty" validate:"omitempty,datetime"`

	// EndDate Конечная дата диапазона
	EndDate *time.Time `form:"endDate,omitempty" json:"endDate,omitempty" validate:"omitempty,datetime"`

	// Page Номер страницы
	Page *int `form:"page,omitempty" json:"page,omitempty" validate:"omitempty,min=1"`

	// Limit Количество элементов на странице
	Limit *int `form:"limit,omitempty" json:"limit,omitempty" validate:"omitempty,min=1,max=30"`
}

// PostReceptionsJSONBody defines parameters for PostReceptions.
type PostReceptionsJSONBody struct {
	PvzId openapi_types.UUID `json:"pvzId" validate:"required,uuid"`
}

// PostRegisterJSONBody defines parameters for PostRegister.
type PostRegisterJSONBody struct {
	Email    openapi_types.Email      `json:"email" validate:"required,email"`
	Password string                   `json:"password" validate:"required,gte=6"`
	Role     PostRegisterJSONBodyRole `json:"role" validate:"required,oneof=employee moderator"`
}

// PostRegisterJSONBodyRole defines parameters for PostRegister.
type PostRegisterJSONBodyRole string

// PostDummyLoginJSONRequestBody defines body for PostDummyLogin for application/json ContentType.
type PostDummyLoginJSONRequestBody PostDummyLoginJSONBody

// PostLoginJSONRequestBody defines body for PostLogin for application/json ContentType.
type PostLoginJSONRequestBody PostLoginJSONBody

// PostProductsJSONRequestBody defines body for PostProducts for application/json ContentType.
type PostProductsJSONRequestBody PostProductsJSONBody

// PostPvzJSONRequestBody defines body for PostPvz for application/json ContentType.
type PostPvzJSONRequestBody = PVZ

// PostReceptionsJSONRequestBody defines body for PostReceptions for application/json ContentType.
type PostReceptionsJSONRequestBody PostReceptionsJSONBody

// PostRegisterJSONRequestBody defines body for PostRegister for application/json ContentType.
type PostRegisterJSONRequestBody PostRegisterJSONBody
